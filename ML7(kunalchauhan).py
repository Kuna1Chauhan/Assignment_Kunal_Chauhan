# -*- coding: utf-8 -*-
"""ML7(KunalChauhan).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cyuUZAu6RZ-FtTwMsuSCY_0FZI2JLMfg
"""

import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from flask import Flask, request, jsonify

# Load the dataset
data = pd.read_csv('https://raw.githubusercontent.com/Kuna1Chauhan/EDA/main/data_2genre.csv')

# Drop irrelevant columns
data = data.drop(['song_title', 'artist'], axis=1)

# Split into features and target
X = data.drop('genre', axis=1)
y = data['genre']

# Perform feature scaling
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply unsupervised learning algorithm (e.g., K-means clustering)
kmeans = KMeans(n_clusters=2)
kmeans.fit(X_scaled)

# Create Flask app
app = Flask(__name__)

# Define route for music genre prediction
@app.route('/predict_genre', methods=['POST'])
def predict_genre():
    # Get music features from user input
    features = request.get_json()

    # Preprocess the features
    features = pd.DataFrame(features, index=[0])
    features_scaled = scaler.transform(features)

    # Predict the genre
    genre = kmeans.predict(features_scaled)[0]

    # Return the predicted genre
    return jsonify({'genre': genre})

# Run the Flask app
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)